blueprint:
  name: Protección solar
  description: Cierre la persiana cuando brille el sol y ábrala cuando pare. Esto considera la posición del sol (elevación, azimut) y la temperatura de un sensor externo.
  domain: automation
  input:
    cover_entity:
      name: cover
      selector:
        entity:
          domain:
          - cover
          multiple: false
    sun_position_start:
      name: Inicio de la posición del azimut del sol
      description: Azimut solar. Cuando el sol supera este valor, la persiana podría cerrarse.
      default: 89
      selector:
        number:
          min: 0.0
          max: 360.0
          unit_of_measurement: °
          mode: slider
          step: 1.0
    sun_position_end:
      name: Fin de la posición del azimut del sol
      description: Azimut solar. cuando el sol supera este valor, la persiana debería abrirse.
      default: 200
      selector:
        number:
          min: 0.0
          max: 360.0
          unit_of_measurement: °
          mode: slider
          step: 1.0
    sun_elevation_start:
      name: Elevación del sol para comenzar
      description: Elevación del sol. Cuando el sol supera este valor, se puede cerrar la persiana.
      default: 32
      selector:
        number:
          min: -100.0
          max: 360.0
          unit_of_measurement: °
          mode: slider
          step: 1.0
    temperature_sensor:
      name: Sensor Temperatura
      description: El sensor utilizado para leer la temperatura exterior.
      selector:
        entity:
          domain:
            - sensor
          device_class:
            - temperature
          multiple: false
    outdoor_temp:
      name: Temperatura exterior
      description: Temperatura por encima de la cual se cerrarán las contraventanas.
      default: 16
      selector:
        number:
          min: 0.0
          max: 30.0
          unit_of_measurement: °C
          mode: slider
          step: 1.0
    close_position:
      name: Posición de cierre de la persiana
      description: 'Posición de destino para persiana cerrada. Nota: ¡100 está abierto!'
      default: 30
      selector:
        number:
          min: 1.0
          max: 99.0
          mode: slider
          step: 1.0
    no_open_after:
      name: Saltar apertura después de este tiempo
      description: Cuando la apertura se produzca después de este tiempo, se omitirá. Esto se puede utilizar para mantener las cortinas cerradas por las noches.
      default: '22:00:00'
      selector:
        time: {}
  source_url: https://github.com/fsanzd/blueprints/blob/main/proteccion_solar.yaml
variables:
  sun_elevation_close: !input sun_elevation_start
  sun_azimuth_close: !input sun_position_start
  sun_azimuth_open: !input sun_position_end
  temp_sensor: !input temperature_sensor
  temp_close: !input outdoor_temp
  curtain_entity_id: !input cover_entity
  curtain_target_position: !input close_position
  no_open_after_time: !input no_open_after
  curtain_current_position: '{{ state_attr(curtain_entity_id, ''current_position'')
    if state_attr(curtain_entity_id, ''current_position'') is not none else state_attr(curtain_entity_id,
    ''position'') }}'
mode: queued
trigger:
- platform: numeric_state
  entity_id: sun.sun
  attribute: elevation
  above: !input sun_elevation_start
  id: t_sun_elevation_above
- platform: numeric_state
  entity_id: sun.sun
  attribute: elevation
  below: !input sun_elevation_start
  id: t_sun_elevation_below
- platform: numeric_state
  entity_id: sun.sun
  attribute: azimuth
  above: !input sun_position_start
  id: t_sun_azimuth_start_above
- platform: numeric_state
  entity_id: sun.sun
  attribute: azimuth
  above: !input sun_position_end
  id: t_sun_azimuth_end_above
- platform: numeric_state
  entity_id: !input temperature_sensor
  attribute: temperature
  above: !input outdoor_temp
  id: t_temp_above
- platform: numeric_state
  entity_id: !input temperature_sensor
  attribute: temperature
  below: !input outdoor_temp
  id: t_temp_below
condition:
- condition: or
  conditions:
  - condition: and
    conditions:
    - condition: template
      value_template: '{{ curtain_current_position > curtain_target_position }}'
    - condition: template
      value_template: '{{ state_attr(''sun.sun'', ''elevation'') >= sun_elevation_close
        }}'
    - condition: template
      value_template: '{{ (sun_azimuth_close <= sun_azimuth_open and sun_azimuth_close
        <= state_attr(''sun.sun'', ''azimuth'') <= sun_azimuth_open) or (sun_azimuth_close
        > sun_azimuth_open and (state_attr(''sun.sun'', ''azimuth'') >= sun_azimuth_close
        or state_attr(''sun.sun'', ''azimuth'') <= sun_azimuth_open)) }}'
    - condition: template
      value_template: '{{ state_attr(temp_sensor, ''temperature'') >= temp_close
        }}'
  - condition: and
    conditions:
    - condition: template
      value_template: '{{ curtain_current_position < 100 }}'
    - condition: template
      value_template: '{{ now() < today_at(no_open_after_time) }}'
    - condition: or
      conditions:
      - condition: and
        conditions:
        - condition: template
          value_template: '{{ state_attr(''sun.sun'', ''elevation'') >= sun_elevation_close
            }}'
        - condition: template
          value_template: '{{ (sun_azimuth_close <= sun_azimuth_open and sun_azimuth_close
            <= state_attr(''sun.sun'', ''azimuth'') <= sun_azimuth_open) or (sun_azimuth_close
            > sun_azimuth_open and (state_attr(''sun.sun'', ''azimuth'') >= sun_azimuth_close
            or state_attr(''sun.sun'', ''azimuth'') <= sun_azimuth_open)) }}'
        - condition: template
          value_template: '{{ state_attr(temp_sensor, ''temperature'') >= temp_close
            }}'
      - condition: and
        conditions:
        - condition: trigger
          id: t_sun_elevation_below
        - condition: template
          value_template: '{{ (sun_azimuth_close <= sun_azimuth_open and sun_azimuth_close
            <= state_attr(''sun.sun'', ''azimuth'') <= sun_azimuth_open) or (sun_azimuth_close
            > sun_azimuth_open and (state_attr(''sun.sun'', ''azimuth'') >= sun_azimuth_close
            or state_attr(''sun.sun'', ''azimuth'') <= sun_azimuth_open)) }}'
        - condition: template
          value_template: '{{ state_attr(temp_sensor, ''temperature'') >= temp_close
            }}'
      - condition: and
        conditions:
        - condition: template
          value_template: '{{ state_attr(''sun.sun'', ''elevation'') >= sun_elevation_close
            }}'
        - condition: trigger
          id: t_sun_azimuth_end_above
        - condition: template
          value_template: '{{ state_attr(temp_sensor, ''temperature'') >= temp_close
            }}'
      - condition: and
        conditions:
        - condition: template
          value_template: '{{ state_attr(''sun.sun'', ''elevation'') >= sun_elevation_close
            }}'
        - condition: template
          value_template: '{{ (sun_azimuth_close <= sun_azimuth_open and sun_azimuth_close
            <= state_attr(''sun.sun'', ''azimuth'') <= sun_azimuth_open) or (sun_azimuth_close
            > sun_azimuth_open and (state_attr(''sun.sun'', ''azimuth'') >= sun_azimuth_close
            or state_attr(''sun.sun'', ''azimuth'') <= sun_azimuth_open)) }}'
        - condition: trigger
          id: t_temp_below
action:
- choose:
  - conditions:
    - condition: template
      value_template: '{{ curtain_current_position > curtain_target_position }}'
    - condition: template
      value_template: '{{ state_attr(''sun.sun'', ''elevation'') >= sun_elevation_close
        }}'
    - condition: template
      value_template: '{{ (sun_azimuth_close <= sun_azimuth_open and sun_azimuth_close
        <= state_attr(''sun.sun'', ''azimuth'') <= sun_azimuth_open) or (sun_azimuth_close
        > sun_azimuth_open and (state_attr(''sun.sun'', ''azimuth'') >= sun_azimuth_close
        or state_attr(''sun.sun'', ''azimuth'') <= sun_azimuth_open)) }}'
    - condition: template
      value_template: '{{ state_attr(temp_sensor, ''temperature'') >= temp_close
        }}'
    sequence:
    - service: cover.set_cover_position
      data:
        position: '{{ curtain_target_position }}'
      target:
        entity_id: '{{ curtain_entity_id }}'
  - conditions:
    - condition: template
      value_template: '{{ curtain_current_position <= curtain_target_position }}'
    - condition: or
      conditions:
      - condition: template
        value_template: '{{ state_attr(''sun.sun'', ''elevation'') < sun_elevation_close
          }}'
      - condition: template
        value_template: '{{ (sun_azimuth_close <= sun_azimuth_open and (sun_azimuth_close
          > state_attr(''sun.sun'', ''azimuth'') or  state_attr(''sun.sun'', ''azimuth'')
          > sun_azimuth_open)) or (sun_azimuth_close > sun_azimuth_open and (state_attr(''sun.sun'',
          ''azimuth'') < sun_azimuth_close and state_attr(''sun.sun'', ''azimuth'')
          > sun_azimuth_open)) }}'
      - condition: template
        value_template: '{{ state_attr(temp_sensor, ''temperature'') < temp_close
          }}'
    sequence:
    - service: cover.set_cover_position
      data:
        position: 100
      target:
        entity_id: '{{ curtain_entity_id }}'
